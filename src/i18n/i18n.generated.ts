/* DO NOT EDIT, file generated by nestjs-i18n */

import { Path } from "nestjs-i18n";
export type I18nTranslations = {
    "exception": {
        "InternalServerError": string;
        "EmailOrPasswordIncorrect": string;
        "EmailAlreadyExists": string;
    };
    "http": {
        "200": string;
        "201": string;
        "202": string;
        "204": string;
        "301": string;
        "302": string;
        "304": string;
        "307": string;
        "308": string;
        "400": string;
        "401": string;
        "403": string;
        "404": string;
        "405": string;
        "406": string;
        "413": string;
        "414": string;
        "415": string;
        "422": string;
        "429": string;
        "500": string;
        "501": string;
        "502": string;
        "503": string;
        "504": string;
        "success": {
            "ok": string;
            "created": string;
            "accepted": string;
            "noContent": string;
        };
        "redirection": {
            "movePermanently": string;
            "found": string;
            "notModified": string;
            "temporaryRedirect": string;
            "permanentRedirect": string;
        };
        "clientError": {
            "badRequest": string;
            "unauthorized": string;
            "forbidden": string;
            "notFound": string;
            "methodNotAllowed": string;
            "notAcceptable": string;
            "payloadToLarge": string;
            "uriToLarge": string;
            "unsupportedMediaType": string;
            "unprocessableEntity": string;
            "tooManyRequest": string;
        };
        "serverError": {
            "internalServerError": string;
            "notImplemented": string;
            "badGateway": string;
            "serviceUnavailable": string;
            "gatewayTimeout": string;
        };
    };
};
export type I18nPath = Path<I18nTranslations>;
